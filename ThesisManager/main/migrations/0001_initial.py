# Generated by Django 5.0.4 on 2024-05-19 03:52

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Campus',
            fields=[
                ('campus', models.CharField(choices=[('Casuarina', 'Casuarina'), ('Sydney', 'Sydney'), ('External', 'External')], max_length=20, primary_key=True, serialize=False, verbose_name='Campus Name')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('category', models.CharField(choices=[('Artificial Intelligence, Machine Learning and Data Science', 'Artificial Intelligence, Machine Learning and Data Science'), ('Biomedical Engineering and Health Informatics', 'Biomedical Engineering and Health Informatics'), ('Cyber Security', 'Cyber Security')], max_length=100, primary_key=True, serialize=False, verbose_name='Category Name')),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('course', models.CharField(choices=[('Chemical Engineering', 'Chemical Engineering'), ('Civil and Structural Engineering', 'Civil and Structural Engineering'), ('Electrical and Electronics Engineering', 'Electrical and Electronics Engineering'), ('Mechanical Engineering', 'Mechanical Engineering'), ('Computer Science', 'Computer Science'), ('Cyber Security', 'Cyber Security'), ('Data Science', 'Data Science'), ('Information Systems and Data Science', 'Information Systems and Data Science'), ('Software Engineering', 'Software Engineering')], max_length=50, primary_key=True, serialize=False, verbose_name='Course Name')),
            ],
        ),
        migrations.CreateModel(
            name='GroupApplication',
            fields=[
                ('group_application_number', models.AutoField(primary_key=True, serialize=False, verbose_name='Group Application Number')),
                ('application_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Supervisor',
            fields=[
                ('supervisor', models.CharField(choices=[('Bharanidharan Shanmugam', 'Bharanidharan Shanmugam'), ('Yakub Sebastian', 'Yakub Sebastian'), ('Sami Azam', 'Sami Azam'), ('Asif Karim', 'Asif Karim')], max_length=50, primary_key=True, serialize=False, verbose_name='Supervisor Name')),
            ],
        ),
        migrations.CreateModel(
            name='Thesis',
            fields=[
                ('topic_number', models.IntegerField(primary_key=True, serialize=False, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(1000)], verbose_name='Thesis Number')),
                ('title', models.CharField(max_length=100, verbose_name='Thesis Title')),
                ('description', models.TextField(verbose_name='Thesis Description')),
                ('group_taker_limit', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)], verbose_name='Number Limit of group takers')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('last_edited', models.DateTimeField(auto_now=True, verbose_name='Date Edited')),
            ],
            options={
                'ordering': ['topic_number'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ThesisRequestAdd',
            fields=[
                ('topic_number', models.IntegerField(primary_key=True, serialize=False, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(1000)], verbose_name='Thesis Number')),
                ('title', models.CharField(max_length=100, verbose_name='Thesis Title')),
                ('description', models.TextField(verbose_name='Thesis Description')),
                ('group_taker_limit', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)], verbose_name='Number Limit of group takers')),
                ('request_date', models.DateTimeField(auto_now_add=True, verbose_name='Date Requested')),
                ('status', models.CharField(choices=[('pending', 'pending'), ('accepted', 'accepted'), ('rejected', 'rejected')], default='pending', max_length=10, verbose_name='Status')),
                ('request_type', models.CharField(choices=[('add', 'add'), ('modify', 'modify'), ('delete', 'delete')], default='add', max_length=10, verbose_name='Request Type')),
            ],
            options={
                'ordering': ['topic_number'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ThesisRequestDelete',
            fields=[
                ('topic_number', models.IntegerField(primary_key=True, serialize=False, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(1000)], verbose_name='Thesis Number')),
                ('title', models.CharField(max_length=100, verbose_name='Thesis Title')),
                ('description', models.TextField(verbose_name='Thesis Description')),
                ('group_taker_limit', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)], verbose_name='Number Limit of group takers')),
                ('request_date', models.DateTimeField(auto_now_add=True, verbose_name='Date Requested')),
                ('status', models.CharField(choices=[('pending', 'pending'), ('accepted', 'accepted'), ('rejected', 'rejected')], default='pending', max_length=10, verbose_name='Status')),
                ('request_type', models.CharField(choices=[('add', 'add'), ('modify', 'modify'), ('delete', 'delete')], default='delete', max_length=10, verbose_name='Request Type')),
            ],
            options={
                'ordering': ['topic_number'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ThesisRequestModify',
            fields=[
                ('topic_number', models.IntegerField(primary_key=True, serialize=False, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(1000)], verbose_name='Thesis Number')),
                ('title', models.CharField(max_length=100, verbose_name='Thesis Title')),
                ('description', models.TextField(verbose_name='Thesis Description')),
                ('group_taker_limit', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)], verbose_name='Number Limit of group takers')),
                ('request_date', models.DateTimeField(auto_now_add=True, verbose_name='Date Requested')),
                ('status', models.CharField(choices=[('pending', 'pending'), ('accepted', 'accepted'), ('rejected', 'rejected')], default='pending', max_length=10, verbose_name='Status')),
                ('request_type', models.CharField(choices=[('add', 'add'), ('modify', 'modify'), ('delete', 'delete')], default='modify', max_length=10, verbose_name='Request Type')),
            ],
            options={
                'ordering': ['topic_number'],
                'abstract': False,
            },
        ),
    ]
