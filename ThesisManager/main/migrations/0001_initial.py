# Generated by Django 5.0.4 on 2024-05-23 15:36

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Campus',
            fields=[
                ('campus', models.CharField(max_length=20, primary_key=True, serialize=False, verbose_name='Campus Name')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('category', models.CharField(max_length=100, primary_key=True, serialize=False, verbose_name='Category Name')),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('course', models.CharField(max_length=50, primary_key=True, serialize=False, verbose_name='Course Name')),
            ],
        ),
        migrations.CreateModel(
            name='Supervisor',
            fields=[
                ('supervisor', models.CharField(max_length=50, primary_key=True, serialize=False, verbose_name='Supervisor Name')),
            ],
        ),
        migrations.CreateModel(
            name='Thesis',
            fields=[
                ('topic_number', models.IntegerField(primary_key=True, serialize=False, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(1000)], verbose_name='Thesis Number')),
                ('title', models.CharField(max_length=100, verbose_name='Thesis Title')),
                ('description', models.TextField(verbose_name='Thesis Description')),
                ('group_taker_limit', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)], verbose_name='Number Limit of group takers')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('last_edited', models.DateTimeField(auto_now=True, verbose_name='Date Edited')),
                ('campus', models.ManyToManyField(to='main.campus', verbose_name='Campus Name')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.category', verbose_name='Category Name')),
                ('course', models.ManyToManyField(to='main.course', verbose_name='Course Name')),
                ('supervisor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.supervisor', verbose_name='Supervisor Name')),
            ],
            options={
                'ordering': ['topic_number'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GroupApplicationStatus',
            fields=[
                ('group_application_id', models.AutoField(primary_key=True, serialize=False, verbose_name='Group Application ID')),
                ('application_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pending', 'pending'), ('accepted', 'accepted'), ('rejected', 'rejected')], default='pending', max_length=10, verbose_name='Status')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Group')),
                ('thesis', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.thesis', verbose_name='Thesis')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GroupApplicationAccepted',
            fields=[
                ('group_application_id', models.AutoField(primary_key=True, serialize=False, verbose_name='Group Application ID')),
                ('application_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pending', 'pending'), ('accepted', 'accepted'), ('rejected', 'rejected')], default='pending', max_length=10, verbose_name='Status')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Group')),
                ('thesis', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.thesis', verbose_name='Thesis')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ThesisRequestAdd',
            fields=[
                ('topic_number', models.IntegerField(primary_key=True, serialize=False, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(1000)], verbose_name='Thesis Number')),
                ('title', models.CharField(max_length=100, verbose_name='Thesis Title')),
                ('description', models.TextField(verbose_name='Thesis Description')),
                ('group_taker_limit', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)], verbose_name='Number Limit of group takers')),
                ('request_date', models.DateTimeField(auto_now_add=True, verbose_name='Date Requested')),
                ('status', models.CharField(choices=[('pending', 'pending'), ('accepted', 'accepted'), ('rejected', 'rejected')], default='pending', max_length=10, verbose_name='Status')),
                ('request_type', models.CharField(choices=[('add', 'add'), ('modify', 'modify'), ('delete', 'delete')], default='add', max_length=10, verbose_name='Request Type')),
                ('campus', models.ManyToManyField(to='main.campus', verbose_name='Campus Name')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.category', verbose_name='Category Name')),
                ('course', models.ManyToManyField(to='main.course', verbose_name='Course Name')),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Requested by')),
                ('supervisor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.supervisor', verbose_name='Supervisor Name')),
            ],
            options={
                'ordering': ['topic_number'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ThesisRequestDelete',
            fields=[
                ('topic_number', models.IntegerField(primary_key=True, serialize=False, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(1000)], verbose_name='Thesis Number')),
                ('title', models.CharField(max_length=100, verbose_name='Thesis Title')),
                ('description', models.TextField(verbose_name='Thesis Description')),
                ('group_taker_limit', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)], verbose_name='Number Limit of group takers')),
                ('request_date', models.DateTimeField(auto_now_add=True, verbose_name='Date Requested')),
                ('status', models.CharField(choices=[('pending', 'pending'), ('accepted', 'accepted'), ('rejected', 'rejected')], default='pending', max_length=10, verbose_name='Status')),
                ('request_type', models.CharField(choices=[('add', 'add'), ('modify', 'modify'), ('delete', 'delete')], default='delete', max_length=10, verbose_name='Request Type')),
                ('campus', models.ManyToManyField(to='main.campus', verbose_name='Campus Name')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.category', verbose_name='Category Name')),
                ('course', models.ManyToManyField(to='main.course', verbose_name='Course Name')),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Requested by')),
                ('supervisor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.supervisor', verbose_name='Supervisor Name')),
            ],
            options={
                'ordering': ['topic_number'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ThesisRequestModify',
            fields=[
                ('topic_number', models.IntegerField(primary_key=True, serialize=False, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(1000)], verbose_name='Thesis Number')),
                ('title', models.CharField(max_length=100, verbose_name='Thesis Title')),
                ('description', models.TextField(verbose_name='Thesis Description')),
                ('group_taker_limit', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)], verbose_name='Number Limit of group takers')),
                ('request_date', models.DateTimeField(auto_now_add=True, verbose_name='Date Requested')),
                ('status', models.CharField(choices=[('pending', 'pending'), ('accepted', 'accepted'), ('rejected', 'rejected')], default='pending', max_length=10, verbose_name='Status')),
                ('request_type', models.CharField(choices=[('add', 'add'), ('modify', 'modify'), ('delete', 'delete')], default='modify', max_length=10, verbose_name='Request Type')),
                ('campus', models.ManyToManyField(to='main.campus', verbose_name='Campus Name')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.category', verbose_name='Category Name')),
                ('course', models.ManyToManyField(to='main.course', verbose_name='Course Name')),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Requested by')),
                ('supervisor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.supervisor', verbose_name='Supervisor Name')),
            ],
            options={
                'ordering': ['topic_number'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GroupApplication',
            fields=[
                ('group_application_id', models.AutoField(primary_key=True, serialize=False, verbose_name='Group Application ID')),
                ('application_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pending', 'pending'), ('accepted', 'accepted'), ('rejected', 'rejected')], default='pending', max_length=10, verbose_name='Status')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Group')),
                ('thesis', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.thesis', verbose_name='Thesis')),
            ],
            options={
                'unique_together': {('thesis', 'group')},
            },
        ),
    ]
